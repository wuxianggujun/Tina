#include <filesystem>
#include <gtest/gtest.h>
#include "filesystem/File.hpp"

using namespace Tina;

class FileTest : public ::testing::Test
{
protected:
    void SetUp() override
    {
        // 清理测试文件
        if (std::filesystem::exists(testFile))
        {
            std::filesystem::remove(testFile);
        }
    }

    void TearDown() override
    {
        // 清理测试文件
        if (std::filesystem::exists(testFile))
        {
            std::filesystem::remove(testFile);
        }
    }

    const std::string testFile = "test.txt";
};

TEST_F(FileTest, FileCreation)
{
    File file(testFile, FileMode::ReadWrite);
    EXPECT_TRUE(file.isOpen());
    EXPECT_TRUE(file.isExit());
}

TEST_F(FileTest, ReadWriteOperations)
{
    File file(testFile, FileMode::ReadWrite);

    EXPECT_TRUE(file.write(true, true));
    EXPECT_TRUE(file.read(true));
    EXPECT_TRUE(file.flush());
    EXPECT_TRUE(file.close());
}

TEST_F(FileTest, FilePathMethods)
{
    File file(testFile, FileMode::ReadWrite);

    EXPECT_EQ(file.getDirectoryPath(), ".");
    EXPECT_EQ(file.getFileName(), testFile);
}

TEST_F(FileTest, FileClose)
{
    File file(testFile, FileMode::ReadWrite);

    EXPECT_TRUE(file.close());
    EXPECT_FALSE(file.isOpen());
}
